import numpy as np
import matplotlib.pyplot as plt

# Начальные параметры
A_init = 1000  # Начальная численность армии A
B_init = 1200  # Начальная численность армии B
alpha = 0.1    # Эффективность армии A (сила поражения армии B)
beta = 0.08    # Эффективность армии B (сила поражения армии A)
r_A = 5        # Скорость пополнения армии A
r_B = 3        # Скорость пополнения армии B
max_A = 1500   # Максимально допустимая численность армии A
max_B = 1500   # Максимально допустимая численность армии B
t_max = 100    # Общее время моделирования
dt = 0.1       # Шаг времени для численного моделирования

# Функция для моделирования войны
def simulate_war(A_init, B_init, alpha, beta, r_A, r_B, max_A, max_B, t_max, dt):
    t = np.arange(0, t_max, dt)  # Временной массив
    A = np.zeros_like(t)         # Массив для численности армии A
    B = np.zeros_like(t)         # Массив для численности армии B
    A[0] = A_init                # Инициализация начальной численности армии A
    B[0] = B_init                # Инициализация начальной численности армии B

    for i in range(1, len(t)):
        # Изменение численности армий за текущий шаг времени
        dA = -beta * B[i-1] + r_A  # Потери и пополнение армии A
        dB = -alpha * A[i-1] + r_B # Потери и пополнение армии B

        # Обновление численности армий с учетом максимального размера
        A[i] = min(A[i-1] + dA * dt, max_A)
        B[i] = min(B[i-1] + dB * dt, max_B)

        # Если одна из армий уничтожена, бой заканчивается
        if A[i] <= 0 or B[i] <= 0:
            A[i:] = max(A[i], 0)  # Устанавливаем оставшиеся значения в 0
            B[i:] = max(B[i], 0)  # Устанавливаем оставшиеся значения в 0
            break

    return t, A, B

# Запуск симуляции
t, A, B = simulate_war(A_init, B_init, alpha, beta, r_A, r_B, max_A, max_B, t_max, dt)

# Построение графика численности армий
plt.figure(figsize=(10, 6))
plt.plot(t, A, label='Army A', color='blue')  # График численности армии A
plt.plot(t, B, label='Army B', color='red')   # График численности армии B
plt.xlabel('Time')                            # Подпись оси X
plt.ylabel('Army Size')                       # Подпись оси Y
plt.legend()                                  # Легенда графика
plt.title('War Model')                        # Заголовок графика
plt.grid()                                    # Сетка на графике
plt.show()
